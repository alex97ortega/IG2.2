#version 330 core
in vec2 vUv0;
in vec2 vUv1;
uniform vec4 InColor;
uniform vec4 OutColor1;
uniform vec4 OutColor2;
const int MaxIter = 500;
out vec4 fFragColor;
uniform float FB;
uniform sampler2D textura;

void main(){
	float Creal = vUv0.s -1.5 +FB;
	float Cimag = vUv0.t;
	float real = Creal + FB;
	float imag = Cimag + FB/2;
	float z2 = 0.0;
	int iter = 0;
	float tempreal = 0.0;
	vec4 color2 = vec4(texture2D(textura, vUv1));

	while (iter < MaxIter && z2 < 4.0){

		//Creal+=FB*0.01;
		tempreal = real;
		real = (tempreal * tempreal) - (imag * imag) + Creal;
		imag = 2.0 *tempreal * imag + Cimag;
		z2 = (real * real) + (imag * imag);
		iter = iter + 1;
	}
	vec3 color3 = vec3(texture2D(textura, vUv0));
	
	vec4 color = InColor;
	if (z2 > 4.0) 
		color = mix(OutColor1, OutColor2, fract(float(iter)* 0.04));
	
	color = (color* color2);
	fFragColor = color;
	

}